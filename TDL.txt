בס"ד										26.01.18
151026 הנדסת תכנה לאינטרנט – תשע"ח לאחר מעבדות 5 ו-6
תרגיל חמישי להגשה (הגשה בקובץ Word), ניתן ומומלץ לעבוד בזוגות בתרגיל הזה.
הנושאים: עבודה עם בסיסי נתונים בכלל ו-MongoDB בפרט, מבנה הפרויקט כולל ארכיטקטורת MVC, העלאת קבצים
א)	נא לקרוא את החומרים על MongoDB, מודול mongoose של Node, לעבור על מבנה הפרויקט כפי שמיוצר ע"י express-generator ועם בתוספות רלוונטיות לעבודה עם בסיסי נתונים וכדומה.
1)	מה הם השלבים של עבודה עם בסיס נתונים מאפליקציית שרת?
2)	מה זה connection string?
3)	מה הן המגבילות של MongoDB למושגים הבאים בבסיסי נתונים רלציונים: טבלה, רשומה, עמודה?
4)	במה עוזרת הסכימה ב-mongoose ומה הקשר שלה ל-MongoDB?
5)	אילו תיקיות במבנה הפרויקט משמשות את החלקים של MVC – view, model, ו-controllers?
_______________________________

ב)	החלק המעשי מתבסס על תרגיל בית 4
•	יש לבצע refactoring ע"י הפרדה למודולים ושיבוץ בתיקיות לפי מבנה הפרויקט כנ"ל
•	יש להתקין את MongoDB ולהריץ mongod בהתאם.
•	יש לתכנן את כל האוספים ושדותיהם האפשריים על מפתחותיהם וכו' על מנת לשמור את כל המידע בבסיס הנתונים MongoDB
•	יש להוסיף תיקיית models למבנה הפרויקט ולבנות את כל המודלים בנפרד לכל אוסף על פי הסעיפים הקודמים. יש לחשוב ולהוסיף בחכמה middleware של mongoose במודולים האלה והוספה\עדכון\בדיקה של מידע בכתיבה ו-\או טעינה של נתונים
•	יש לבצע refactoring של הקוד על מנת להעביר את כל המידע לבסיס הנתונים הנ"ל, כולל כל פעולות CRUD ושאילתות הנדרשות באפליקציית השרת
•	יש להוסיף אפשרות של הוספת מוצר ע"י משתמש מקטגוריית ספק או חלופתו, כולל העלאת קבצים של תמונה ו-\או ספציפיקציה של המוצר או פונקציונליות דומה באפליקציה שלכם
o	יש לאפשר העלאת תמונה\קובץ גם מאינטרנט וגם מהמחשב דרך הדפדפן (יש לממש את שתי האפשרויות) בחלקים המתאימים של האתר (למשל תמונת המוצר)
o	על מנת להעלות קבצים מהמחשב יש להשתמש בצד שרת במודול הרחבה multer של node (תמצאו ב-npmjs.org) או מודול הרחבה אחר לבחירתכם להעלאת קבצים ע"י multipart/form-data (זה יעשה את הקוד בדף להרבה יותר פשוט ממה שהוצג\מופיע בהנחיות מעבדה 5)